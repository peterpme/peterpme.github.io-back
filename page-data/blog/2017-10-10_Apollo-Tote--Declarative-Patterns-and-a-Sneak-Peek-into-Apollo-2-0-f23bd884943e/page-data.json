{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2017-10-10_Apollo-Tote--Declarative-Patterns-and-a-Sneak-Peek-into-Apollo-2-0-f23bd884943e/","webpackCompilationHash":"f146ed55f93bb0a77a00","result":{"data":{"site":{"siteMetadata":{"title":"Peter Piekarczyk","author":"@peterpme"}},"markdownRemark":{"id":"9673541a-5b1d-5856-b81e-1e92da324b33","excerpt":"Photo by [Lee Campbell](https://unsplash.com/photos/qNPESem_t4I?utm_source=unsplash&utm_medium=referral&utm_content…","html":"<p><img src=\"https://cdn-images-1.medium.com/max/800/1*-iRwtXSSIuhyj80jS6Js_w.jpeg\" alt=\"Photo by [Lee Campbell](https://unsplash.com/photos/qNPESem_t4I?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText) on [Unsplash](https://unsplash.com/?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText)\">\nPhoto by <a href=\"https://unsplash.com/photos/qNPESem_t4I?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lee Campbell</a> on <a href=\"https://unsplash.com/?utm_source=unsplash&#x26;utm_medium=referral&#x26;utm_content=creditCopyText\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Unsplash</a></p>\n<p><em>This is a guest post from</em> <a href=\"https://medium.com/u/cff8a83d5fc3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>Peter Piekarczyk</em></a><em>, technical co-founder and Apollo / React Native guru at</em> <a href=\"https://www.orchard.ai/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>Orchard.ai</em></a><em>.</em></p>\n<p><a href=\"https://github.com/peterpme/apollo-tote\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apollo Tote</a> is a declarative React component. Take what you’ve been doing inside your “smart” containers and apply it with JSX! It’s meant to be a simple helper library for your Apollo queries until declarative components are released in Apollo 2.</p>\n<blockquote>\n<p>I created this because I don’t believe separate components and containers need to be applied everywhere. There are times where I’d prefer to see everything in one, succinct file.</p>\n</blockquote>\n<p>I came up with the idea for Apollo Tote while working on <a href=\"https://www.orchard.ai\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Orchard Ai</a>. We’re utilizing <a href=\"https://www.expo.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Expo</a> and <a href=\"https://apollodata.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apollo</a> to help you stay on top of your relationships &#x26; network the same way you do about diet, health and fitness.</p>\n<p>At the very minimum, give it a query and a few render props:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>ApolloTote\n query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">user { imageUrl }</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span>\n renderLoading<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>Avatar<span class=\"token punctuation\">.</span>Loading <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>Avatar imageUrl<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>imageUrl <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>Note: Apollo Tote is not meant to be used everywhere. We only support queries for now. That being said, there are places where Apollo Tote shines!</p>\n<h3 id=\"use-cases\"><a href=\"#use-cases\" aria-label=\"use cases permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Cases</h3>\n<h4 id=\"logged-in--logged-out-authentication--authorization\"><a href=\"#logged-in--logged-out-authentication--authorization\" aria-label=\"logged in  logged out authentication  authorization permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Logged In / Logged Out (Authentication / Authorization)</h4>\n<p>Authentication &#x26; Authorization have always been a drag, for whatever reason. You’ll save a user token in localStorage, but you start to realize there’s a few cases you need to handle:</p>\n<ul>\n<li>A token exists but the user no longer does (this sounds so dark IRL)</li>\n<li>A token exists but has expired</li>\n<li>There is no token (this one’s easy!)</li>\n</ul>\n<p>Apollo Tote Authorization &#x26; Authentication Example</p>\n<p><code class=\"language-text\">renderError, renderLoading, render</code> are all Apollo-specific and map directly to { error, loading, data }.</p>\n<p><code class=\"language-text\">test, handleFail, handlePass</code> are additional helper methods you can use to test for something specific.</p>\n<p>In this case I’m testing for <code class=\"language-text\">user.id</code>, but you can use it for anything where you might use <code class=\"language-text\">branch</code> in Recompose: anything that needs to pass or fail.</p>\n<p>In this case, I’m dispatching <code class=\"language-text\">LOG_IN / LOG_OUT</code> with Redux, but feel free to use an event emitter or call a class method, etc.</p>\n<h4 id=\"handling-loading--error-states\"><a href=\"#handling-loading--error-states\" aria-label=\"handling loading  error states permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Handling Loading / Error States</h4>\n<p>I like to load a different component when I’m handling error state. My favorite way of doing that is by exporting a <code class=\"language-text\">Loading</code> component. This way I don’t have to fk around with any of the styling to get the loading state I’d like. It just works!</p>\n<p>Apollo Tote makes that super easy for ya by giving you the <code class=\"language-text\">renderLoading</code> prop:</p>\n<p>Apollo Tote Loading State Example</p>\n<h3 id=\"final-thoughts\"><a href=\"#final-thoughts\" aria-label=\"final thoughts permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Final Thoughts</h3>\n<p>Apollo Tote &#x26; render props are a great option when it comes to working with a complex application structure. While Apollo Tote is around today, a version of it will appear in Apollo 2. I’ll keep the API as similar as I can so when its ready, all you’ll have to do is replace the import!</p>\n<p>This is an awesome opportunity for the community to help make Apollo 2’s declarative components an awesome experience.</p>\n<p>Shout-out to my friends <a href=\"https://medium.com/u/93de0780c5e6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kye Hohenberger</a> and <a href=\"https://medium.com/u/e55117c5994d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kyle Shevlin</a> for the feedback. It’s something I always appreciate!</p>","timeToRead":3,"fields":{"slug":"blog/2017-10-10_Apollo-Tote--Declarative-Patterns-and-a-Sneak-Peek-into-Apollo-2-0-f23bd884943e/"},"frontmatter":{"title":"Apollo Tote, Declarative Patterns and a Sneak Peek into Apollo 2.0","date":"October 10, 2017","description":"A guest post on the Apollo GraphQL Blog"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"blog/2017-10-10_Apollo-Tote--Declarative-Patterns-and-a-Sneak-Peek-into-Apollo-2-0-f23bd884943e/","previous":{"fields":{"slug":"blog/2017-03-30_9-Things-I-Wish-I-Knew-When-I-Started-Writing-Code-19bc0fab697b/"},"frontmatter":{"title":"9 Things I Wish I Knew When I Started Writing Code"}},"next":{"fields":{"slug":"blog/2017-10-20_Thoughts-on-Structuring-your-Apollo-Queries---Mutations-939ba4746cd8/"},"frontmatter":{"title":"Thoughts on Structuring your Apollo Queries & Mutations"}}}}}