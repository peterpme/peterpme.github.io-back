{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/draft_Building-High-Performance-Web-Apps-with-Emotion-and-Next-js-4a4c40af43d0/","webpackCompilationHash":"f146ed55f93bb0a77a00","result":{"data":{"site":{"siteMetadata":{"title":"Peter Piekarczyk","author":"@peterpme"}},"markdownRemark":{"id":"17f0fd5b-e356-5c22-92ae-f93f69a50922","excerpt":"If you haven’t heard of Emotion yet, it’s one of the fastest CSS-in-JS libraries to date. Its API is similar to styled…","html":"<p>If you haven’t heard of Emotion yet, it’s one of the fastest CSS-in-JS libraries to date. Its API is similar to styled-components but delivers your stylesheets over 200x faster. If you don’t believe me, check out @tkh44’s article here or the benchmarks you can run on your own here.</p>\n<p>Under the hood, Emotion uses a babel plugin to parse your CSS and constructs style blocks from your components. It reads those blocks with PostCSS, manipulates them and writes template literals back with babel. It’s the reason why Emotion is so fast: it takes care of all the expensive operations like parsing nested rules and prefixes ahead of time.</p>\n<p>When you combine an awesome server-rendered experience like Next.js with Emotion, you get a high performant website right out of the box.</p>\n<h4 id=\"installation\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h4>\n<p>The easiest way to get started is by using <code class=\"language-text\">create-next-app</code> to generate a brand new project.</p>\n<p><code class=\"language-text\">create-next-app</code> takes the same approach <code class=\"language-text\">create-react-app</code> does but it generates a Next.js project instead. It’ll install all the dependencies you need ahead of time and put together the base project.</p>\n<p>Run the following to get yourself started with Next.js and Emotion:</p>\n<ul>\n<li><code class=\"language-text\">yarn global add create-next-app</code> or <code class=\"language-text\">npm install -g create-next-app</code></li>\n<li><code class=\"language-text\">create-next-app hackernews</code></li>\n<li><code class=\"language-text\">cd hackernews</code></li>\n<li><code class=\"language-text\">yarn add emotion</code> or <code class=\"language-text\">npm install —-save emotion</code></li>\n</ul>\n<h4 id=\"yarn\"><a href=\"#yarn\" aria-label=\"yarn permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Yarn</h4>\n<p><code class=\"language-text\">yarn</code> is an alternative package manager to <code class=\"language-text\">npm</code> that strives for high performance and security. You can read more about it at <a href=\"%5Bhttps://yarnpkg.com%5D(https://yarnpkg.com)\">yarnpkg.com</a> or get started with it right away by running <code class=\"language-text\">brew update &amp;&amp; brew install yarn</code> in your terminal.</p>\n<h4 id=\"configuration\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h4>\n<p>For Next.js and other server-rendered libraries, Emotion requires an additional step of adding an <code class=\"language-text\">inline-mode</code> configuration to your babelrc. If you were using <code class=\"language-text\">create-react-app</code> or a single page app with no server rendering, you could skip this step.</p>\n<h4 id=\"extract-vs-inline-mode\"><a href=\"#extract-vs-inline-mode\" aria-label=\"extract vs inline mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extract vs. Inline Mode</h4>\n<p>Extract is how Emotion works out of the box. It’s the “high perf” setting if you’re not worried about IE11 or below and aren’t doing any server rendering. The reason why its faster is because it skips the prefixing step older browsers require.</p>\n<p>Inline Mode is the “safety net” setting that is just a smidge slower but supports every browser React does and supports server rendering. If you’re developing for a wide audience of people and browsers, this is the mode you want to go with.</p>\n<h4 id=\"getting-started\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h4>\n<p>Emotion supports almost every technique and API you’ve loved when it comes to CSS-in-JS libraries including raw CSS files. It makes porting your project over from virtually anything a breeze!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Avatar <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>‘img’<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n width: 100px;\n height: 100px;\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<h4 id=\"final-thoughts\"><a href=\"#final-thoughts\" aria-label=\"final thoughts permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Final Thoughts</h4>\n<p>I love Emotion because it supports a lot of the same features I was looking for when comparing different CSS-in-JSS libraries except offering incredible performance we all strive to achieve.</p>","timeToRead":2,"fields":{"slug":"blog/draft_Building-High-Performance-Web-Apps-with-Emotion-and-Next-js-4a4c40af43d0/"},"frontmatter":{"title":"Building High Performance Web Apps with Emotion and Next.js","date":"Invalid date","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"blog/draft_Building-High-Performance-Web-Apps-with-Emotion-and-Next-js-4a4c40af43d0/","previous":null,"next":{"fields":{"slug":"blog/draft_Becoming-a-better-developer-bf4d87335419/"},"frontmatter":{"title":"Becoming a better developer"}}}}}